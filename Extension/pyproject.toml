[project]
name = "reg23"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "matplotlib>=3.10.0",
    "pytest>=8.4.1",
]

# sets of optional dependencies (distinct from the normal dependencies above) are defined
[project.optional-dependencies]
cpu = [
    "torch==2.7.1+cpu; sys_platform != 'darwin'",
    "torch==2.7.1; sys_platform == 'darwin'",
    "torchvision==0.22.1+cpu; sys_platform != 'darwin'",
    "torchvision==0.22.1; sys_platform == 'darwin'",
]
cuda = [
    "torch==2.7.1+cu126",
    "torchvision==0.22.1+cu126",
]

[build-system]
requires = [
    "numpy==2.2.1",
    "torch==2.7.1",
    "setuptools==75.8.0",
]
build-backend = "setuptools.build_meta"

[tool.uv]
# the project is re-built when any of the following globbed files are modified
cache-keys = [
    { file = "pyproject.toml" },
    { file = "setup.py" },
    { file = "include/*.h" },
    { file = "src/*.cpp" },
    { file = "src/*.cu" },
]
# conflicts between optional dependencies are stated so that uv doesn't try to install them by default and complain
conflicts = [
    [
        { extra = "cpu" },
        { extra = "cuda" },
    ],
]

# these define which sources to install some particular packages from
[tool.uv.sources]
# torch and torchvision are installed from the named indexes, according to which 'extra' (optional dependencies) is installed
torch = [
    { index = "torch-cpu", extra = "cpu" },
    { index = "torch-cuda", extra = "cuda" },
]
torchvision = [
    { index = "torch-cpu", extra = "cpu" },
    { index = "torch-cuda", extra = "cuda" },
]

# this defines an index (a type of source from which a package can be installed) called `torch-cpu` at a particular url
[[tool.uv.index]]
name = "torch-cpu"
url = "https://download.pytorch.org/whl/cpu"

# this defines an index (a type of source from which a package can be installed) called `torch-cuda` at a particular url
[[tool.uv.index]]
name = "torch-cuda"
url = "https://download.pytorch.org/whl/cu126"
